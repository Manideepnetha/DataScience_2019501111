q()
getwd()
setwd("F:\\Data Science\\DataScience_2019501111\\Data Mining\\Final exam")
liver = read.csv("Liver_data.csv", header = FALSE, col.names = c("1", "2", "3", "4", "5", "6", "7"))
str(liver)
summary(liver)
x<-liver[,1:2]
plot(x,pch=19,xlab=expression(x[1]),ylab=expression(x[2]))
fit<-kmeans(x, 4)
points(fit$centers,pch=19,col="blue",cex=2)
library(class)
knnfit<-knn(fit$centers,x,as.factor(c(-1,1)))
points(x,col=1+1*as.numeric(knnfit),pch=19)
install.packages("class")
getwd()
setwd("F:\\Data Science\\DataScience_2019501111\\Data Mining\\Final exam")
liver = read.csv("Liver_data.csv", header = FALSE, col.names = c("1", "2", "3", "4", "5", "6", "7"))
str(liver)
summary(liver)
x<-liver[,1:2]
plot(x,pch=19,xlab=expression(x[1]),ylab=expression(x[2]))
fit<-kmeans(x, 4)
points(fit$centers,pch=19,col="blue",cex=2)
library(class)
knnfit<-knn(fit$centers,x,as.factor(c(-1,1)))
points(x,col=1+1*as.numeric(knnfit),pch=19)
getwd()
setwd("F:\\Data Science\\DataScience_2019501111\\Data Mining\\Final exam")
liver = read.csv("Liver_data.csv", header = FALSE, col.names = c("1", "2", "3", "4", "5", "6", "7"))
str(liver)
summary(liver)
x<-liver[,1:2]
plot(x,pch=19,xlab=expression(x[1]),ylab=expression(x[2]))
fit<-kmeans(x, 4)
points(fit$centers,pch=19,col="blue",cex=2)
library(class)
knnfit<-knn(fit$centers,x,as.factor(c(-1,1)))
points(x,col=1+1*as.numeric(knnfit),pch=19)
getwd()
setwd("F:\\Data Science\\DataScience_2019501111\\Data Mining\\Final exam")
liver = read.csv("Liver_data.csv", header = FALSE, col.names = c("1", "2", "3", "4", "5", "6", "7"))
str(liver)
summary(liver)
x<-liver[,1:2]
plot(x,pch=19,xlab=expression(x[1]),ylab=expression(x[2]))
fit<-kmeans(x, 4)
points(fit$centers,pch=19,col="blue",cex=2)
library(class)
knnfit<-knn(fit$centers,x,as.factor(c(-1,1)))
points(x,col=1+1*as.numeric(knnfit),pch=19)
getwd()
setwd("F:\\Data Science\\DataScience_2019501111\\Data Mining\\Final exam")
liver = read.csv("Liver_data.csv", header = FALSE, col.names = c("1", "2", "3", "4", "5", "6", "7"))
str(liver)
summary(liver)
x<-liver[,1:2]
plot(x,pch=19,xlab=expression(x[1]),ylab=expression(x[2]))
fit<-kmeans(x, 4)
points(fit$centers,pch=19,col="blue",cex=2)
library(class)
knnfit<-knn(fit$centers,x,as.factor(c(-1,1)))
points(x,col=1+1*as.numeric(knnfit),pch=19)
getwd()
setwd("F:\\Data Science\\DataScience_2019501111\\Data Mining\\Final exam")
liver = read.csv("Liver_data.csv", header = FALSE, col.names = c("1", "2", "3", "4", "5", "6", "7"))
str(liver)
summary(liver)
x<-liver[,1:2]
plot(x,pch=19,xlab=expression(x[1]),ylab=expression(x[2]))
fit<-kmeans(x, 4)
points(fit$centers,pch=19,col="blue",cex=2)
library(class)
knnfit<-knn(fit$centers,x,as.factor(c(-1,1)))
points(x,col=1+1*as.numeric(knnfit),pch=19)
setwd("F:\\Data Science\\DataScience_2019501111\\Data Mining\\Final exam")
data = read.csv("bupa.csv", header = FALSE, col.names = c("1", "2", "3", "4", "5", "6", "7"))
str(data)
summary(data)
x = data[,1:5]
y = data[,6]
fit = kmeans(x,4)
library(class)
knnfit = knn(fit$centers,x,as.factor(c(-2,-1,1,2)))
error = 1-sum(knnfit == y)/length(y)
error
#Misclassification Error Rate = 0.9536232
getwd()
setwd("F:\\Data Science\\DataScience_2019501111\\Data Mining\\Final exam")
liver = read.csv("Liver_data.csv", header = FALSE, col.names = c("1", "2", "3", "4", "5", "6", "7"))
str(liver)
summary(liver)
x<-liver[,1:2]
plot(x,pch=19,xlab=expression(x[1]),ylab=expression(x[2]))
fit<-kmeans(x, 4)
points(fit$centers,pch=19,col="blue",cex=2)
library(class)
knnfit<-knn(fit$centers,x,as.factor(c(-1,1)))
points(x,col=1+1*as.numeric(knnfit),pch=19)
data = read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks", "selector"))
#taking mcv and gammagt columns
x = data[, c("mcv", "alkphos","gammagt", "drinks")]
plot(x,pch = 19, xlim=c(80,100), ylim=c(0,200))
#kmeans with 4 clusters and plotting them
help(kmeans)
model1 = kmeans(x, 4)
plot(x, col=model1$cluster, xlim=c(80,100), ylim=c(0,200))
points(model1$center, col='brown', pch=19, cex=2)
#If you see the 3rd Row First column we can observe clear boundaries different clusters when compared to others.
x1 = data[,c("mcv", "gammagt")]
plot(x,pch = 19, xlim=c(80,100), ylim=c(0,200))
data = read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks", "selector"))
#taking mcv and gammagt columns
x = data[, c("mcv", "alkphos","gammagt", "drinks")]
plot(x,pch = 19, xlim=c(80,100), ylim=c(0,200))
#kmeans with 4 clusters and plotting them
help(kmeans)
model1 = kmeans(x, 4)
plot(x, col=model1$cluster, xlim=c(80,100), ylim=c(0,200))
points(model1$center, col='brown', pch=19, cex=2)
#If you see the 3rd Row First column we can observe clear boundaries different clusters when compared to others.
x1 = data[,c("mcv", "gammagt")]
plot(x,pch = 19, xlim=c(80,100), ylim=c(0,200))
help(kmeans)
model2 = kmeans(x, 4)
plot(x, col=model2$cluster, xlim=c(80,100), ylim=c(0,200))
points(model2$center, col='brown', pch=19, cex=2)
data = read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks", "selector"))
#MCVGammagt
x = data[, c("mcv", "alkphos","gammagt", "drinks")]
plot(x,pch = 19, xlim=c(80,100), ylim=c(0,200))
#kmeans
help(kmeans)
model1 = kmeans(x, 4)
plot(x, col=model1$cluster, xlim=c(80,100), ylim=c(0,200))
points(model1$center, col='brown', pch=19, cex=2)
x1 = data[,c("mcv", "gammagt")]
plot(x,pch = 19, xlim=c(80,100), ylim=c(0,200))
help(kmeans)
model2 = kmeans(x, 4)
plot(x, col=model2$cluster, xlim=c(80,100), ylim=c(0,200))
points(model2$center, col='brown', pch=19, cex=2)
setwd("F:\\Data Science\\DataScience_2019501111\\Data Mining\\Final exam")
data = read.csv("BSE_Sensex_Index.csv", header = TRUE)
View(data)
summary(data)
data$Date = as.Date(data$Date, format='%m/%d/%Y')
randomRows = function(df,n){
return(df[sample(nrow(df),n, replace = TRUE),])
}
successive_difference <- function(x) {
n = length(x)
for (i in 1:(length(x))) {
x[i] <- (x[i] - x[i + 1]) / x[i + 1]
}
x[length(x)] = (x[length(x) - 1] + x[length(x) - 2] + x[length(x) - 3]) / 3
return(x)
}
data$Date <- NULL
data$open_new <- successive_difference(data$Open)
data$high_new <- successive_difference(data$High)
data$low_new <- successive_difference(data$Low)
data$close_new <- successive_difference(data$Close)
data$volume_new <- successive_difference(data$Volume)
data$Adj.close_new <- successive_difference(data$Adj.Close)
set.seed(123)
data_1000 = randomRows(data, 1000)
summary(data_1000)
data_3000 = randomRows(data, 3000)
summary(data_3000)
mean(data_1000$open_new)
mean(data_1000$high_new)
mean(data_1000$low_new)
mean(data_1000$close_new)
mean(data_1000$volume_new)
mean(data_1000$Adj.close_new)
var(data_1000$open_new)
var(data_1000$high_new)
var(data_1000$low_new)
var(data_1000$close_new)
var(data_1000$volume_new)
var(data_1000$Adj.close_new)
max(data_1000$open_new)
max(data_1000$high_new)
max(data_1000$low_new)
max(data_1000$close_new)
max(data_1000$volume_new)
max(data_1000$Adj.close_new)
quantile(data_1000$open_new,0.25)
quantile(data_1000$high_new,0.25)
quantile(data_1000$low_new,0.25)
quantile(data_1000$close_new,0.25)
quantile(data_1000$volume_new,0.25)
quantile(data_1000$Adj.close_new,0.25)
mean(data_3000$open_new)
mean(data_3000$high_new)
mean(data_3000$low_new)
mean(data_3000$close_new)
mean(data_3000$volume_new)
mean(data_3000$Adj.close_new)
var(data_3000$open_new)
var(data_3000$high_new)
var(data_3000$low_new)
var(data_3000$close_new)
var(data_3000$volume_new)
var(data_3000$Adj.close_new)
max(data_3000$open_new)
max(data_3000$high_new)
max(data_3000$low_new)
max(data_3000$close_new)
max(data_3000$volume_new)
max(data_3000$Adj.close_new)
quantile(data_3000$open_new,0.25)
quantile(data_3000$high_new,0.25)
quantile(data_3000$low_new,0.25)
quantile(data_3000$close_new,0.25)
quantile(data_3000$volume_new,0.25)
quantile(data_3000$Adj.close_new,0.25)
mean(data$open_new)
mean(data$high_new)
mean(data$low_new)
mean(data$close_new)
mean(data$volume_new)
mean(data$Adj.close_new)
var(data$open_new)
var(data$high_new)
var(data$low_new)
var(data$close_new)
var(data$volume_new)
var(data$Adj.close_new)
max(data$open_new)
max(data$high_new)
max(data$low_new)
max(data$close_new)
max(data$volume_new)
max(data$Adj.close_new)
quantile(data$open_new,0.25)
quantile(data$high_new,0.25)
quantile(data$low_new,0.25)
quantile(data$close_new,0.25)
quantile(data$volume_new,0.25)
quantile(data$Adj.close_new,0.25)
# They appear to be very similar
boxplot(data$Open, data$High, data$Low, data$Adj.close, data$Close)
hist(data$Close, freq = TRUE, w = 2000)
setwd("F:\\Data Science\\DataScience_2019501111\\Data Mining\\Final exam")
data = read.csv("BSE_Sensex_Index.csv", header = TRUE)
View(data)
summary(data)
data$Date = as.Date(data$Date, format='%m/%d/%Y')
randomRows = function(df,n){
return(df[sample(nrow(df),n, replace = TRUE),])
}
successive_difference <- function(x) {
n = length(x)
for (i in 1:(length(x))) {
x[i] <- (x[i] - x[i + 1]) / x[i + 1]
}
x[length(x)] = (x[length(x) - 1] + x[length(x) - 2] + x[length(x) - 3]) / 3
return(x)
}
data$Date <- NULL
data$open_new <- successive_difference(data$Open)
data$high_new <- successive_difference(data$High)
data$low_new <- successive_difference(data$Low)
data$close_new <- successive_difference(data$Close)
data$volume_new <- successive_difference(data$Volume)
data$Adj.close_new <- successive_difference(data$Adj.Close)
set.seed(123)
data_1000 = randomRows(data, 1000)
summary(data_1000)
data_3000 = randomRows(data, 3000)
summary(data_3000)
mean(data_1000$open_new)
mean(data_1000$high_new)
mean(data_1000$low_new)
mean(data_1000$close_new)
mean(data_1000$volume_new)
mean(data_1000$Adj.close_new)
var(data_1000$open_new)
var(data_1000$high_new)
var(data_1000$low_new)
var(data_1000$close_new)
var(data_1000$volume_new)
var(data_1000$Adj.close_new)
max(data_1000$open_new)
max(data_1000$high_new)
max(data_1000$low_new)
max(data_1000$close_new)
max(data_1000$volume_new)
max(data_1000$Adj.close_new)
quantile(data_1000$open_new,0.25)
quantile(data_1000$high_new,0.25)
quantile(data_1000$low_new,0.25)
quantile(data_1000$close_new,0.25)
quantile(data_1000$volume_new,0.25)
quantile(data_1000$Adj.close_new,0.25)
mean(data_3000$open_new)
mean(data_3000$high_new)
mean(data_3000$low_new)
mean(data_3000$close_new)
mean(data_3000$volume_new)
mean(data_3000$Adj.close_new)
var(data_3000$open_new)
var(data_3000$high_new)
var(data_3000$low_new)
var(data_3000$close_new)
var(data_3000$volume_new)
var(data_3000$Adj.close_new)
max(data_3000$open_new)
max(data_3000$high_new)
max(data_3000$low_new)
max(data_3000$close_new)
max(data_3000$volume_new)
max(data_3000$Adj.close_new)
quantile(data_3000$open_new,0.25)
quantile(data_3000$high_new,0.25)
quantile(data_3000$low_new,0.25)
quantile(data_3000$close_new,0.25)
quantile(data_3000$volume_new,0.25)
quantile(data_3000$Adj.close_new,0.25)
mean(data$open_new)
mean(data$high_new)
mean(data$low_new)
mean(data$close_new)
mean(data$volume_new)
mean(data$Adj.close_new)
var(data$open_new)
var(data$high_new)
var(data$low_new)
var(data$close_new)
var(data$volume_new)
var(data$Adj.close_new)
max(data$open_new)
max(data$high_new)
max(data$low_new)
max(data$close_new)
max(data$volume_new)
max(data$Adj.close_new)
quantile(data$open_new,0.25)
quantile(data$high_new,0.25)
quantile(data$low_new,0.25)
quantile(data$close_new,0.25)
quantile(data$volume_new,0.25)
quantile(data$Adj.close_new,0.25)
# They appear to be very similar
boxplot(data$Open, data$High, data$Low, data$Adj.close, data$Close)
hist(data$Close, freq = TRUE, w = 2000, col="red")
setwd("F:\\Data Science\\DataScience_2019501111\\Data Mining\\Final exam")
data = read.csv("BSE_Sensex_Index.csv", header = TRUE)
View(data)
summary(data)
data$Date = as.Date(data$Date, format='%m/%d/%Y')
randomRows = function(df,n){
return(df[sample(nrow(df),n, replace = TRUE),])
}
successive_difference <- function(x) {
n = length(x)
for (i in 1:(length(x))) {
x[i] <- (x[i] - x[i + 1]) / x[i + 1]
}
x[length(x)] = (x[length(x) - 1] + x[length(x) - 2] + x[length(x) - 3]) / 3
return(x)
}
data$Date <- NULL
data$open_new <- successive_difference(data$Open)
data$high_new <- successive_difference(data$High)
data$low_new <- successive_difference(data$Low)
data$close_new <- successive_difference(data$Close)
data$volume_new <- successive_difference(data$Volume)
data$Adj.close_new <- successive_difference(data$Adj.Close)
set.seed(123)
data_1000 = randomRows(data, 1000)
summary(data_1000)
data_3000 = randomRows(data, 3000)
summary(data_3000)
mean(data_1000$open_new)
mean(data_1000$high_new)
mean(data_1000$low_new)
mean(data_1000$close_new)
mean(data_1000$volume_new)
mean(data_1000$Adj.close_new)
var(data_1000$open_new)
var(data_1000$high_new)
var(data_1000$low_new)
var(data_1000$close_new)
var(data_1000$volume_new)
var(data_1000$Adj.close_new)
max(data_1000$open_new)
max(data_1000$high_new)
max(data_1000$low_new)
max(data_1000$close_new)
max(data_1000$volume_new)
max(data_1000$Adj.close_new)
quantile(data_1000$open_new,0.25)
quantile(data_1000$high_new,0.25)
quantile(data_1000$low_new,0.25)
quantile(data_1000$close_new,0.25)
quantile(data_1000$volume_new,0.25)
quantile(data_1000$Adj.close_new,0.25)
mean(data_3000$open_new)
mean(data_3000$high_new)
mean(data_3000$low_new)
mean(data_3000$close_new)
mean(data_3000$volume_new)
mean(data_3000$Adj.close_new)
var(data_3000$open_new)
var(data_3000$high_new)
var(data_3000$low_new)
var(data_3000$close_new)
var(data_3000$volume_new)
var(data_3000$Adj.close_new)
max(data_3000$open_new)
max(data_3000$high_new)
max(data_3000$low_new)
max(data_3000$close_new)
max(data_3000$volume_new)
max(data_3000$Adj.close_new)
quantile(data_3000$open_new,0.25)
quantile(data_3000$high_new,0.25)
quantile(data_3000$low_new,0.25)
quantile(data_3000$close_new,0.25)
quantile(data_3000$volume_new,0.25)
quantile(data_3000$Adj.close_new,0.25)
mean(data$open_new)
mean(data$high_new)
mean(data$low_new)
mean(data$close_new)
mean(data$volume_new)
mean(data$Adj.close_new)
var(data$open_new)
var(data$high_new)
var(data$low_new)
var(data$close_new)
var(data$volume_new)
var(data$Adj.close_new)
max(data$open_new)
max(data$high_new)
max(data$low_new)
max(data$close_new)
max(data$volume_new)
max(data$Adj.close_new)
quantile(data$open_new,0.25)
quantile(data$high_new,0.25)
quantile(data$low_new,0.25)
quantile(data$close_new,0.25)
quantile(data$volume_new,0.25)
quantile(data$Adj.close_new,0.25)
# They appear to be very similar
boxplot(data$Open, data$High, data$Low, data$Adj.close, data$Close)
hist(data$Close, freq = TRUE, w = 2000, col="red")
